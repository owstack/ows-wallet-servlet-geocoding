"use strict";angular.module("owsWalletPlugin",["gettext","ngLodash","owsWalletPluginClient","owsWalletPlugin.apiHandlers","owsWalletPlugin.services"]),angular.module("owsWalletPlugin.apiHandlers",[]),angular.module("owsWalletPlugin.services",[]),angular.module("owsWalletPlugin").config(function($pluginConfigProvider){$pluginConfigProvider.router.routes([{path:"/openstreetmap/address",method:"GET",handler:"getAddress"},{path:"/openstreetmap/location",method:"GET",handler:"getLocation"}])}).run(function(openStreetMapService){owswallet.Plugin.ready(function(){})}),angular.module("owsWalletPlugin.services").factory("openStreetMapService",["$log","owsWalletPluginClient.api.Device","owsWalletPluginClient.api.Http",function($log,Device,Http){var openStreetMapApi,root={},apiUrl=(owswallet.Plugin.isCordova(),"https://nominatim.openstreetmap.org/");function getError(response,callerId){return response.message?{id:"unexpected_error",message:response.message}:($log.error("OpenStreetMap: "+callerId+" - "+response.toString()),response.status&&response.status<=0?{id:"network_error",message:"Network error"}:{id:"unexpected_error",message:response.toString()})}return root.init=function(clientId,config){return new Promise(function(resolve,reject){if(!config){var error="Could not initialize API service: no plugin configuration provided";$log.error(error),reject(error)}var info={urls:{url:"https://www.openstreetmap.org",githubUrl:"https://github.com/openstreetmap/Nominatim"}};return openStreetMapApi=new Http(apiUrl,{headers:{"Content-Type":"application/json",Accept:"application/json"}}),resolve({info:info})})},root.getAddress=function(position){return new Promise(function(resolve,reject){position?openStreetMapApi.get("reverse?format=json&lat="+position.coords.latitude+"&lon="+position.coords.longitude).then(function(response){resolve(response.address)}).catch(function(response){reject(getError(response,"getAddress"))}):Device.getPosition().then(function(position){return openStreetMapApi.get("reverse?format=json&lat="+position.coords.latitude+"&lon="+position.coords.longitude)}).then(function(response){resolve(response.address)}).catch(function(response){reject(getError(response,"getAddress"))})})},root.getPosition=function(address){return new Promise(function(resolve,reject){if(address){var encodedAddress=encodeURI(address.number||","+address.street||","+address.city||","+address.state||","+address.postalCode||","+address.country||"");openStreetMapApi.get("search?format=json&q="+encodedAddress).then(function(response){resolve(response)}).catch(function(response){reject(getError(response,"getPosition"))})}else Device.getPosition().then(function(position){resolve({position:{coords:{latitude:position.coords.latitude,longitude:position.coords.longitude}}})}).catch(function(response){reject(getError(response,"getPosition"))})})},root}]),angular.module("owsWalletPlugin.api.osm").factory("getAddress",["openStreetMapService","owsWalletPluginClient.api.Utils",function(openStreetMapService,Utils){var root={},REQUIRED_DATA=[];return root.respond=function(message,callback){var position=message.request.data.position,missing=Utils.checkRequired(REQUIRED_DATA,message.request.data);if(missing.length>0)return message.response={statusCode:400,statusText:"REQUEST_NOT_VALID",data:{message:"The request does not include "+missing.toString()+"."}},callback(message);openStreetMapService.getAddress(position).then(function(address){var response=address;return message.response={statusCode:200,statusText:"OK",data:response},callback(message)}).catch(function(error){return message.response={statusCode:error.statusCode||500,statusText:error.statusText||"UNEXPECTED_ERROR",data:{message:error.message||error.toString()}},callback(message)})},root}]),angular.module("owsWalletPlugin.api.osm").factory("getPosition",["openStreetMapService","owsWalletPluginClient.api.Utils",function(opemStreetMapService,Utils){var root={},REQUIRED_DATA=[];return root.respond=function(message,callback){var address=message.request.data.address,missing=Utils.checkRequired(REQUIRED_DATA,message.request.data);if(missing.length>0)return message.response={statusCode:400,statusText:"REQUEST_NOT_VALID",data:{message:"The request does not include "+missing.toString()+"."}},callback(message);openStreetMapService.getPosition(address).then(function(position){var response=position;return message.response={statusCode:200,statusText:"OK",data:response},callback(message)}).catch(function(error){return message.response={statusCode:error.statusCode||500,statusText:error.statusText||"UNEXPECTED_ERROR",data:{message:error.message||error.toString()}},callback(message)})},root}]),angular.module("owsWalletPlugin.apiHandlers").service("service",["openStreetMapService","owsWalletPluginClient.api.Utils",function(openStreetMapService,Utils){var root={},REQUIRED_DATA=[];return root.respond=function(message,callback){var missing=Utils.checkRequired(REQUIRED_DATA,message.request.data);if(missing.length>0)return message.response={statusCode:400,statusText:"REQUEST_NOT_VALID",data:{message:"The request does not include "+missing.toString()+"."}},callback(message);var clientId=message.header.clientId,pluginConfig=message.request.data.config;if(!pluginConfig)return message.response={statusCode:500,statusText:"REQUEST_NOT_VALID",data:{message:"Missing required configuration."}},callback(message);openStreetMapService.init(clientId,pluginConfig).then(function(){return message.response={statusCode:200,statusText:"OK",data:{}},callback(message)}).catch(function(error){return message.response={statusCode:error.statusCode||500,statusText:error.statusText||"UNEXPECTED_ERROR",data:{message:error.message}},callback(message)})},root}]);