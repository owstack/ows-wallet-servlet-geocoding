"use strict";angular.module("owsWalletPlugin",["gettext","ngLodash","owsWalletPluginClient","owsWalletPlugin.apiHandlers","owsWalletPlugin.services"]),angular.module("owsWalletPlugin.apiHandlers",[]),angular.module("owsWalletPlugin.services",[]),angular.module("owsWalletPlugin").config(function($pluginConfigProvider){$pluginConfigProvider.router.routes([{path:"/address",method:"GET",handler:"getAddress"},{path:"/position",method:"GET",handler:"getPosition"},{path:"/service",method:"PUT",handler:"service"}])}).run(function(){owswallet.Plugin.ready(function(){})}),angular.module("owsWalletPlugin.services").factory("dataService",[function(){var root={states:[{abbr:"AL",name:"Alabama"},{abbr:"AK",name:"Alaska"},{abbr:"AZ",name:"Arizona"},{abbr:"AR",name:"Arkansas"},{abbr:"CA",name:"California"},{abbr:"CO",name:"Colorado"},{abbr:"CT",name:"Connecticut"},{abbr:"DE",name:"Delaware"},{abbr:"FL",name:"Florida"},{abbr:"GA",name:"Georgia"},{abbr:"HI",name:"Hawaii"},{abbr:"ID",name:"Idaho"},{abbr:"IL",name:"Illinois"},{abbr:"IN",name:"Indiana"},{abbr:"IA",name:"Iowa"},{abbr:"KS",name:"Kansas"},{abbr:"KY",name:"Kentucky"},{abbr:"LA",name:"Louisiana"},{abbr:"ME",name:"Maine"},{abbr:"MD",name:"Maryland"},{abbr:"MA",name:"Massachusetts"},{abbr:"MI",name:"Michigan"},{abbr:"MN",name:"Minnesota"},{abbr:"MS",name:"Mississippi"},{abbr:"MO",name:"Missouri"},{abbr:"MT",name:"Montana"},{abbr:"NE",name:"Nebraska"},{abbr:"NV",name:"Nevada"},{abbr:"NH",name:"New Hampshire"},{abbr:"NJ",name:"New Jersey"},{abbr:"NM",name:"New Mexico"},{abbr:"NY",name:"New York"},{abbr:"NC",name:"North Carolina"},{abbr:"ND",name:"North Dakota"},{abbr:"OH",name:"Ohio"},{abbr:"OK",name:"Oklahoma"},{abbr:"OR",name:"Oregon"},{abbr:"PA",name:"Pennsylvania"},{abbr:"RI",name:"Rhode Island"},{abbr:"SC",name:"South Carolina"},{abbr:"SD",name:"South Dakota"},{abbr:"TN",name:"Tennessee"},{abbr:"TX",name:"Texas"},{abbr:"UT",name:"Utah"},{abbr:"VT",name:"Vermont"},{abbr:"VA",name:"Virginia"},{abbr:"WA",name:"Washington"},{abbr:"WV",name:"West Virginia"},{abbr:"WI",name:"Wisconsin"},{abbr:"WY",name:"Wyoming"}]};return root}]),angular.module("owsWalletPlugin.services").factory("geocodingService",["$log","dataService","lodash","providerService","owsWalletPluginClient.api.Device","owsWalletPluginClient.api.Http",function($log,dataService,lodash,providerService,Device,Http){var provider,apiKey,geocodingApi,geocodingReverseApi,root={};owswallet.Plugin.isCordova();function decodeAddress(data){var address=provider.getAddress(data);return{street:provider.getStreet(address),city:provider.getCity(address),state:provider.getState(address),postalCode:provider.getPostalCode(address)}}function getError(response,callerId){return response.message?{id:"unexpected_error",message:response.message}:($log.error("Geocoding: "+callerId+" - "+response.toString()),response.status&&response.status<=0?{id:"network_error",message:"Network error"}:{id:"unexpected_error",message:response.toString()})}return root.init=function(clientId,config){return new Promise(function(resolve,reject){if(!config){var error="Could not initialize API service: no plugin configuration provided";$log.error(error),reject(error)}var providerConfig=lodash.find(config.providers,function(p){return 1==p.default});return provider=providerService[providerConfig.name],apiKey=providerConfig.apiKey,geocodingApi=new Http(provider.api.url.replace("{{apiKey}}",apiKey),{headers:{"Content-Type":"application/json",Accept:"application/json"}}),geocodingReverseApi=new Http(provider.api.reverseUrl.replace("{{apiKey}}",apiKey),{headers:{"Content-Type":"application/json",Accept:"application/json"}}),resolve({provider:provider.info})})},root.getAddress=function(position){return new Promise(function(resolve,reject){position?geocodingReverseApi.get(provider.getLocationURI(position.coords.latitude,position.coords.longitude)).then(function(response){resolve(decodeAddress(response.data))}).catch(function(response){reject(getError(response,"getAddress"))}):Device.getCurrentPosition().then(function(position){if(position)return geocodingReverseApi.get(provider.getLocationURI(position.coords.latitude,position.coords.longitude));resolve()}).then(function(response){resolve(decodeAddress(response.data))}).catch(function(response){reject(getError(response,"getAddress"))})})},root.getPosition=function(address){return new Promise(function(resolve,reject){if(address){var encodedAddress=provider.encodeAddress(address);geocodingApi.get(encodedAddress).then(function(response){resolve(response.data)}).catch(function(response){reject(getError(response,"getPosition"))})}else Device.getCurrentPosition().then(function(position){position?resolve({coords:{latitude:position.coords.latitude,longitude:position.coords.longitude}}):resolve()}).catch(function(response){reject(getError(response,"getPosition"))})})},root}]),angular.module("owsWalletPlugin.services").factory("providerService",["lodash",function(lodash){return{osm:{api:{key:"",url:"https://nominatim.openstreetmap.org/search?format=json&q=",reverseUrl:"https://nominatim.openstreetmap.org/reverse?format=json&"},info:{url:"https://www.openstreetmap.org/",urlText:"OpenStreet Map",attribution:"Map data copyrighted OpenStreetMap contributors and available from https://www.openstreetmap.org."},getLocationURI:function(latitude,longitude){return"lat="+latitude+"&lon="+longitude},getAddress:function(data){return lodash.get(data,"address")},getStreet:function(address){return lodash.get(address,"number")+" "+lodash.get(address,"street")},getCity:function(address){return lodash.get(address,"city")},getState:function(address){return lodash.get(address,"state")},getPostalCode:function(address){return lodash.get(address,"zip")},encodeAddress:function(address){return encodeURI(address.number||","+address.street||","+address.city||","+address.state||","+address.postalCode||","+address.country||"")}},tamu:{api:{url:"https://geoservices.tamu.edu/Services/Geocode/WebService/GeocoderWebServiceHttpNonParsed_V04_01.aspx?apiKey={{apiKey}}&format=json&census=true&censusYear=2000|2010&notStore=false&version=4.10&",reverseUrl:"https://geoservices.tamu.edu/Services/ReverseGeocoding/WebService/v04_01/HTTP/default.aspx?apiKey={{apiKey}}&format=json&notStore=false&version=4.10&"},info:{url:"https://geoservices.tamu.edu/",urlText:"Texas A&M Geoservices Services",attribution:"Goldberg DW. 2019. Texas A&M University Geoservices. Available online at http://geoservices.tamu.edu. Last accessed 2019."},getLocationURI:function(latitude,longitude){return"lat="+latitude+"&lon="+longitude},getAddress:function(data){var path=lodash.get(data,"StreetAddresses");return lodash.isArray(path)&&(path=path[0]),path},getStreet:function(address){return lodash.get(address,"StreetAddress")},getCity:function(address){return lodash.get(address,"City")},getState:function(address){var state=lodash.get(address,"State");return state.length>2&&(state=lodash.find(dataService.states,{name:state}).abbr),state.toUpperCase()},getPostalCode:function(address){return lodash.get(address,"Zip")},encodeAddress:function(address){return encodeURI("streetAddress="+address.number||"%"+address.street||"&city="+address.city||"&state="+address.state||"&zip="+address.postalCode||"")}},mapquest:{api:{url:"http://www.mapquestapi.com/geocoding/v1/address?key={{apiKey}}&",reverseUrl:"http://www.mapquestapi.com/geocoding/v1/reverse?key={{apiKey}}&includeRoadMetadata=true&includeNearestIntersection=true&"},info:{url:"https://www.mapquest.com/",urlText:"MapQuest",attribution:"MapQuest, 2019."},getLocationURI:function(latitude,longitude){return"location="+latitude+","+longitude},getAddress:function(data){return lodash.get(data,"results[0].locations[0]")},getStreet:function(address){return lodash.get(address,"street")},getCity:function(address){return lodash.get(address,"adminArea5")},getState:function(address){return lodash.get(address,"adminArea3").toUpperCase()},getPostalCode:function(address){return lodash.get(address,"postalCode")},encodeAddress:function(address){return encodeURI("location="+address.number||" "+address.street||","+address.city||","+address.state||","+address.postalCode||"")}}}}]),angular.module("owsWalletPlugin.apiHandlers").factory("getAddress",["geocodingService","owsWalletPluginClient.api.Utils",function(geocodingService,Utils){var root={},REQUIRED_DATA=[];return root.respond=function(message,callback){var position=message.request.data.position,missing=Utils.checkRequired(REQUIRED_DATA,message.request.data);if(missing.length>0)return message.response={statusCode:400,statusText:"REQUEST_NOT_VALID",data:{message:"The request does not include "+missing.toString()+"."}},callback(message);geocodingService.getAddress(position).then(function(address){var response=address;return message.response={statusCode:200,statusText:"OK",data:response},callback(message)}).catch(function(error){return message.response={statusCode:error.statusCode||500,statusText:error.statusText||"UNEXPECTED_ERROR",data:{message:error.message||error.toString()}},callback(message)})},root}]),angular.module("owsWalletPlugin.apiHandlers").factory("getPosition",["geocodingService","owsWalletPluginClient.api.Utils",function(geocodingService,Utils){var root={},REQUIRED_DATA=[];return root.respond=function(message,callback){var address=message.request.data.address,missing=Utils.checkRequired(REQUIRED_DATA,message.request.data);if(missing.length>0)return message.response={statusCode:400,statusText:"REQUEST_NOT_VALID",data:{message:"The request does not include "+missing.toString()+"."}},callback(message);geocodingService.getPosition(address).then(function(position){var response=position;return message.response={statusCode:200,statusText:"OK",data:response},callback(message)}).catch(function(error){return message.response={statusCode:error.statusCode||500,statusText:error.statusText||"UNEXPECTED_ERROR",data:{message:error.message||error.toString()}},callback(message)})},root}]),angular.module("owsWalletPlugin.apiHandlers").service("service",["geocodingService","owsWalletPluginClient.api.Utils",function(geocodingService,Utils){var root={},REQUIRED_DATA=[];return root.respond=function(message,callback){var missing=Utils.checkRequired(REQUIRED_DATA,message.request.data);if(missing.length>0)return message.response={statusCode:400,statusText:"REQUEST_NOT_VALID",data:{message:"The request does not include "+missing.toString()+"."}},callback(message);var clientId=message.header.clientId,pluginConfig=message.request.data.config;if(!pluginConfig)return message.response={statusCode:500,statusText:"REQUEST_NOT_VALID",data:{message:"Missing required configuration."}},callback(message);geocodingService.init(clientId,pluginConfig).then(function(){return message.response={statusCode:200,statusText:"OK",data:{}},callback(message)}).catch(function(error){return message.response={statusCode:error.statusCode||500,statusText:error.statusText||"UNEXPECTED_ERROR",data:{message:error.message}},callback(message)})},root}]);